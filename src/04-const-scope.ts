/**
 * ‡∏ö‡∏ó‡∏ó‡∏µ‡πà 4: Variable Scope - const
 * ‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏£‡∏π‡πâ const ‡πÅ‡∏•‡∏∞‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á
 */

console.log("üéØ ‡∏ö‡∏ó‡∏ó‡∏µ‡πà 4: Variable Scope - const");
console.log("=" .repeat(50));

// ==========================================
// 1. Block Scope ‡∏Ç‡∏≠‡∏á const
// ==========================================
console.log("\n1Ô∏è‚É£ Block Scope ‡∏Ç‡∏≠‡∏á const");
console.log("-".repeat(40));

function constScopeExample() {
    const functionScoped = "‡∏â‡∏±‡∏ô‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô function scope";
    
    if (true) {
        const blockScoped = "‡∏â‡∏±‡∏ô‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô block scope";
        console.log("üîç ‡πÉ‡∏ô if block:", blockScoped);
        console.log("üîç ‡πÉ‡∏ô if block (function var):", functionScoped);
    }
    
    // ‚ùå blockScoped ‡πÉ‡∏ä‡πâ‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏ô‡∏≠‡∏Å block
    console.log("üîç ‡∏ô‡∏≠‡∏Å if block (function var):", functionScoped);
    console.log("‚ùå blockScoped ‡πÉ‡∏ä‡πâ‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏ô‡∏≠‡∏Å block (‡πÄ‡∏´‡∏°‡∏∑‡∏≠‡∏ô let)");
}

constScopeExample();

// ==========================================
// 2. ‡∏ï‡πâ‡∏≠‡∏á‡∏°‡∏µ‡∏Ñ‡πà‡∏≤‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô (Initialization Required)
// ==========================================
console.log("\n2Ô∏è‚É£ ‡∏ï‡πâ‡∏≠‡∏á‡∏°‡∏µ‡∏Ñ‡πà‡∏≤‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô");
console.log("-".repeat(40));

// ‚úÖ ‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á - ‡∏°‡∏µ‡∏Ñ‡πà‡∏≤‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô
const validConst = "‡∏â‡∏±‡∏ô‡∏°‡∏µ‡∏Ñ‡πà‡∏≤‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô";
console.log("‚úÖ const ‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á:", validConst);

// ‚ùå ‡∏ú‡∏¥‡∏î - ‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ñ‡πà‡∏≤‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô
// const invalidConst; // SyntaxError: Missing initializer in const declaration
console.log("‚ùå const ‡∏ï‡πâ‡∏≠‡∏á‡∏°‡∏µ‡∏Ñ‡πà‡∏≤‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡πÄ‡∏™‡∏°‡∏≠");

// ==========================================
// 3. ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ Reassign ‡πÑ‡∏î‡πâ
// ==========================================
console.log("\n3Ô∏è‚É£ ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ Reassign ‡πÑ‡∏î‡πâ");
console.log("-".repeat(40));

const constantValue = "‡∏Ñ‡πà‡∏≤‡∏Ñ‡∏á‡∏ó‡∏µ‡πà";
console.log("üîí ‡∏Ñ‡πà‡∏≤‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô:", constantValue);

// ‚ùå ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ reassign ‡πÑ‡∏î‡πâ
// constantValue = "‡∏Ñ‡πà‡∏≤‡πÉ‡∏´‡∏°‡πà"; // TypeError: Assignment to constant variable
console.log("‚ùå ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ reassign const ‡πÑ‡∏î‡πâ");

// ==========================================
// 4. Object ‡πÅ‡∏•‡∏∞ Array ‡∏ó‡∏µ‡πà‡πÄ‡∏õ‡πá‡∏ô const
// ==========================================
console.log("\n4Ô∏è‚É£ Object ‡πÅ‡∏•‡∏∞ Array ‡∏ó‡∏µ‡πà‡πÄ‡∏õ‡πá‡∏ô const");
console.log("-".repeat(40));

// const ‡∏Å‡∏±‡∏ö Object
const constObject: { name: string; age: number; hobbies: string[]; city?: string } = {
    name: "‡∏™‡∏°‡∏ä‡∏≤‡∏¢",
    age: 25,
    hobbies: ["‡∏≠‡πà‡∏≤‡∏ô‡∏´‡∏ô‡∏±‡∏á‡∏™‡∏∑‡∏≠", "‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ô‡πÇ‡∏Ñ‡πâ‡∏î"]
};

console.log("üèóÔ∏è Object ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô:", constObject);

// ‚úÖ ‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô properties ‡πÑ‡∏î‡πâ
constObject.age = 26;
constObject.city = "‡∏Å‡∏£‡∏∏‡∏á‡πÄ‡∏ó‡∏û‡∏Ø";
console.log("‚úÖ ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô properties ‡πÑ‡∏î‡πâ:", constObject);

// ‚úÖ ‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô array elements ‡πÑ‡∏î‡πâ
constObject.hobbies.push("‡πÄ‡∏•‡πà‡∏ô‡∏Å‡∏µ‡∏ï‡∏≤‡∏£‡πå");
console.log("‚úÖ ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô array elements ‡πÑ‡∏î‡πâ:", constObject);

// ‚ùå ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ reassign object ‡πÑ‡∏î‡πâ
// constObject = {}; // TypeError

// const ‡∏Å‡∏±‡∏ö Array
const constArray = [1, 2, 3];
console.log("\nüìä Array ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô:", constArray);

// ‚úÖ ‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô elements ‡πÑ‡∏î‡πâ
constArray.push(4);
constArray[0] = 10;
console.log("‚úÖ ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô elements ‡πÑ‡∏î‡πâ:", constArray);

// ‚ùå ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ reassign array ‡πÑ‡∏î‡πâ
// constArray = []; // TypeError

// ==========================================
// 5. Immutability ‡πÄ‡∏ï‡πá‡∏°‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö
// ==========================================
console.log("\n5Ô∏è‚É£ Immutability ‡πÄ‡∏ï‡πá‡∏°‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö");
console.log("-".repeat(40));

// Object.freeze() ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö shallow immutability
const frozenObject = Object.freeze({
    name: "‡πÑ‡∏°‡πà‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÅ‡∏õ‡∏•‡∏á",
    count: 42
});

console.log("üßä Frozen object:", frozenObject);

// ‚ùå ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô properties ‡πÑ‡∏î‡πâ
try {
    // frozenObject.name = "‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ"; // Error ‡πÉ‡∏ô strict mode
    // frozenObject.newProp = "‡πÉ‡∏´‡∏°‡πà"; // Error ‡πÉ‡∏ô strict mode
    console.log("‚ùå Object.freeze() ‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÅ‡∏õ‡∏•‡∏á properties");
} catch (error: any) {
    console.log("Error:", error.message);
}

// Deep freeze function
function deepFreeze<T>(obj: T): T {
    Object.getOwnPropertyNames(obj).forEach(function(prop) {
        if ((obj as any)[prop] !== null && typeof (obj as any)[prop] === "object") {
            deepFreeze((obj as any)[prop]);
        }
    });
    return Object.freeze(obj);
}

const deepFrozenObject = deepFreeze({
    user: {
        name: "‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ",
        preferences: {
            theme: "dark",
            language: "th"
        }
    }
});

console.log("üßä Deep frozen object:", deepFrozenObject);

// ==========================================
// 6. const ‡πÉ‡∏ô Loop
// ==========================================
console.log("\n6Ô∏è‚É£ const ‡πÉ‡∏ô Loop");
console.log("-".repeat(40));

// ‚úÖ const ‡πÉ‡∏ô for...of loop
const items = ["item1", "item2", "item3"];
console.log("üîÑ const ‡πÉ‡∏ô for...of:");
for (const item of items) {
    console.log(`  ${item}`);
    // const item ‡∏à‡∏∞‡∏ñ‡∏π‡∏Å‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÉ‡∏´‡∏°‡πà‡πÉ‡∏ô‡πÅ‡∏ï‡πà‡∏•‡∏∞‡∏£‡∏≠‡∏ö
}

// ‚úÖ const ‡πÉ‡∏ô forEach
console.log("\nüîÑ const ‡πÉ‡∏ô forEach:");
items.forEach((item, index) => {
    const processedItem = `[${index}] ${item.toUpperCase()}`;
    console.log(`  ${processedItem}`);
});

// ‚ùå const ‡πÉ‡∏ô traditional for loop (‡πÑ‡∏°‡πà‡πÄ‡∏´‡∏°‡∏≤‡∏∞)
console.log("\n‚ùå const ‡πÑ‡∏°‡πà‡πÄ‡∏´‡∏°‡∏≤‡∏∞‡∏Å‡∏±‡∏ö traditional for loop:");
console.log("   ‡πÄ‡∏û‡∏£‡∏≤‡∏∞ counter ‡∏ï‡πâ‡∏≠‡∏á reassign");

// ‡πÉ‡∏ä‡πâ let ‡πÅ‡∏ó‡∏ô
for (let i = 0; i < 3; i++) {
    const message = `‡∏£‡∏≠‡∏ö‡∏ó‡∏µ‡πà ${i + 1}`;
    console.log(`  ${message}`);
}

// ==========================================
// 7. Function Declarations ‡πÅ‡∏•‡∏∞ const
// ==========================================
console.log("\n7Ô∏è‚É£ Function Declarations ‡πÅ‡∏•‡∏∞ const");
console.log("-".repeat(40));

// const ‡∏Å‡∏±‡∏ö arrow functions
const constArrowFunction = (name: string) => {
    return `‡∏™‡∏ß‡∏±‡∏™‡∏î‡∏µ ${name} ‡∏à‡∏≤‡∏Å const arrow function`;
};

// const ‡∏Å‡∏±‡∏ö function expressions
const constFunctionExpression = function(name: string) {
    return `‡∏™‡∏ß‡∏±‡∏™‡∏î‡∏µ ${name} ‡∏à‡∏≤‡∏Å const function expression`;
};

console.log("üîß", constArrowFunction("‡∏™‡∏°‡∏ä‡∏≤‡∏¢"));
console.log("üîß", constFunctionExpression("‡∏™‡∏°‡∏´‡∏ç‡∏¥‡∏á"));

// ‚ùå ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ reassign functions ‡πÑ‡∏î‡πâ
// constArrowFunction = () => {}; // TypeError

// ==========================================
// 8. const ‡∏Å‡∏±‡∏ö Module Exports
// ==========================================
console.log("\n8Ô∏è‚É£ const ‡∏Å‡∏±‡∏ö Module Exports");
console.log("-".repeat(40));

// Configuration objects
const CONFIG = {
    API_URL: "https://api.example.com",
    TIMEOUT: 5000,
    DEBUG: true
} as const; // as const ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö type-level immutability

console.log("‚öôÔ∏è Configuration:", CONFIG);

// Constants
const HTTP_STATUS = {
    OK: 200,
    NOT_FOUND: 404,
    SERVER_ERROR: 500
} as const;

console.log("üìä HTTP Status codes:", HTTP_STATUS);

// ==========================================
// 9. Temporal Dead Zone ‡∏Ç‡∏≠‡∏á const
// ==========================================
console.log("\n9Ô∏è‚É£ Temporal Dead Zone ‡∏Ç‡∏≠‡∏á const");
console.log("-".repeat(40));

function constTemporalDeadZone() {
    console.log("üö´ const ‡∏°‡∏µ Temporal Dead Zone ‡πÄ‡∏´‡∏°‡∏∑‡∏≠‡∏ô let");
    
    try {
        // console.log("‡∏Å‡πà‡∏≠‡∏ô declare:", temporalConst); // ReferenceError
        console.log("‚ùå ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÉ‡∏ä‡πâ const ‡∏Å‡πà‡∏≠‡∏ô declare");
    } catch (error: any) {
        console.log("Error: ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏Ç‡πâ‡∏≤‡∏ñ‡∏∂‡∏á‡∏ï‡∏±‡∏ß‡πÅ‡∏õ‡∏£‡∏Å‡πà‡∏≠‡∏ô declare");
    }
    
    const temporalConst = "‡∏â‡∏±‡∏ô‡∏ñ‡∏π‡∏Å declare ‡πÅ‡∏•‡πâ‡∏ß";
    console.log("‚úÖ ‡∏´‡∏•‡∏±‡∏á declare:", temporalConst);
}

constTemporalDeadZone();

// ==========================================
// 10. Performance Benefits
// ==========================================
console.log("\nüîü Performance Benefits");
console.log("-".repeat(40));

function performanceExample() {
    console.log("‚ö° Performance benefits ‡∏Ç‡∏≠‡∏á const:");
    
    // JavaScript engine ‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ optimize ‡πÑ‡∏î‡πâ‡∏î‡∏µ‡∏Å‡∏ß‡πà‡∏≤
    const MULTIPLIER = 10;
    const results: number[] = [];
    
    for (let i = 0; i < 5; i++) {
        // Engine ‡∏£‡∏π‡πâ‡∏ß‡πà‡∏≤ MULTIPLIER ‡πÑ‡∏°‡πà‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô
        results.push(i * MULTIPLIER);
    }
    
    console.log("  ‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå:", results);
    console.log("‚úÖ Engine optimize const ‡πÑ‡∏î‡πâ‡∏î‡∏µ‡∏Å‡∏ß‡πà‡∏≤ let/var");
    console.log("‚úÖ ‡∏•‡∏î memory allocation");
    console.log("‚úÖ ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏£‡πá‡∏ß‡πÉ‡∏ô‡∏Å‡∏≤‡∏£ execute");
}

performanceExample();

// ==========================================
// 11. Best Practices ‡∏Å‡∏±‡∏ö const
// ==========================================
console.log("\n1Ô∏è‚É£1Ô∏è‚É£ Best Practices ‡∏Å‡∏±‡∏ö const");
console.log("-".repeat(40));

console.log("üìã Best Practices ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö const:");
console.log("‚úÖ ‡πÉ‡∏ä‡πâ const ‡πÄ‡∏õ‡πá‡∏ô‡∏Ñ‡πà‡∏≤‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡πÄ‡∏™‡∏°‡∏≠");
console.log("‚úÖ ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÄ‡∏õ‡πá‡∏ô let ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£ reassign");
console.log("‚úÖ ‡πÉ‡∏ä‡πâ UPPER_CASE ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö constants ‡∏ó‡∏µ‡πà‡πÄ‡∏õ‡πá‡∏ô primitive");
console.log("‚úÖ ‡πÉ‡∏ä‡πâ Object.freeze() ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£ immutability");
console.log("‚úÖ ‡πÉ‡∏ä‡πâ as const ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö type-level immutability");
console.log("‚úÖ ‡πÉ‡∏ä‡πâ const ‡∏Å‡∏±‡∏ö functions ‡πÅ‡∏•‡∏∞ objects");

// ‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á Best Practices
function bestPracticesExample() {
    console.log("\nüí° ‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á Best Practices:");
    
    // ‡∏î‡∏µ: ‡πÉ‡∏ä‡πâ const ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Ñ‡πà‡∏≤‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô
    const PI = 3.14159;
    const APP_NAME = "My Application";
    
    // ‡∏î‡∏µ: ‡πÉ‡∏ä‡πâ const ‡∏Å‡∏±‡∏ö objects
    const user = {
        id: 1,
        name: "‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ"
    };
    
    // ‡∏î‡∏µ: ‡πÉ‡∏ä‡πâ const ‡∏Å‡∏±‡∏ö arrays
    const colors = ["‡πÅ‡∏î‡∏á", "‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ß", "‡∏ô‡πâ‡∏≥‡πÄ‡∏á‡∏¥‡∏ô"];
    
    // ‡∏î‡∏µ: ‡πÉ‡∏ä‡πâ const ‡∏Å‡∏±‡∏ö functions
    const calculateArea = (radius: number) => PI * radius * radius;
    
    console.log(`  ${APP_NAME}`);
    console.log(`  Area: ${calculateArea(5)}`);
    console.log(`  User: ${user.name}`);
    console.log(`  Colors: ${colors.join(", ")}`);
    
    // ‡∏î‡∏µ: ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô properties ‡πÑ‡∏î‡πâ‡πÅ‡∏ï‡πà‡πÑ‡∏°‡πà reassign
    user.name = "‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡πÉ‡∏´‡∏°‡πà";
    colors.push("‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡∏á");
    
    console.log(`  Updated User: ${user.name}`);
    console.log(`  Updated Colors: ${colors.join(", ")}`);
}

bestPracticesExample();

// ==========================================
// 12. Common Mistakes
// ==========================================
console.log("\n1Ô∏è‚É£2Ô∏è‚É£ Common Mistakes");
console.log("-".repeat(40));

console.log("‚ö†Ô∏è ‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡∏ó‡∏µ‡πà‡∏û‡∏ö‡∏ö‡πà‡∏≠‡∏¢‡∏Å‡∏±‡∏ö const:");

// ‡∏ú‡∏¥‡∏î: ‡∏Ñ‡∏¥‡∏î‡∏ß‡πà‡∏≤ const object ‡πÄ‡∏õ‡πá‡∏ô immutable
console.log("‚ùå ‡∏ú‡∏¥‡∏î: ‡∏Ñ‡∏¥‡∏î‡∏ß‡πà‡∏≤ const object ‡πÑ‡∏°‡πà‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÅ‡∏õ‡∏•‡∏á");
const mutableObject = { count: 0 };
mutableObject.count++; // ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÑ‡∏î‡πâ!
console.log("  Object ‡∏¢‡∏±‡∏á‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÑ‡∏î‡πâ:", mutableObject);

// ‡∏ú‡∏¥‡∏î: ‡πÑ‡∏°‡πà‡πÉ‡∏™‡πà‡∏Ñ‡πà‡∏≤‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô
console.log("‚ùå ‡∏ú‡∏¥‡∏î: ‡πÑ‡∏°‡πà‡πÉ‡∏™‡πà‡∏Ñ‡πà‡∏≤‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô");
console.log("  const mustHaveValue; // SyntaxError");

// ‡∏ú‡∏¥‡∏î: ‡∏û‡∏¢‡∏≤‡∏¢‡∏≤‡∏° reassign
console.log("‚ùå ‡∏ú‡∏¥‡∏î: ‡∏û‡∏¢‡∏≤‡∏¢‡∏≤‡∏° reassign");
console.log("  constVariable = newValue; // TypeError");

// ‡∏ñ‡∏π‡∏Å: ‡πÉ‡∏ä‡πâ const ‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á
console.log("‚úÖ ‡∏ñ‡∏π‡∏Å: ‡πÉ‡∏ä‡πâ const ‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á");
const correctUsage = "‡∏Ñ‡πà‡∏≤‡∏Ñ‡∏á‡∏ó‡∏µ‡πà";
console.log("  const correctUsage = '‡∏Ñ‡πà‡∏≤‡∏Ñ‡∏á‡∏ó‡∏µ‡πà';");

// ==========================================
// ‡∏™‡∏£‡∏∏‡∏õ‡∏ö‡∏ó‡πÄ‡∏£‡∏µ‡∏¢‡∏ô
// ==========================================
console.log("\nüìö ‡∏™‡∏£‡∏∏‡∏õ‡∏ö‡∏ó‡∏ó‡∏µ‡πà 4 - const:");
console.log("üéØ const ‡∏°‡∏µ block scope ‡πÄ‡∏´‡∏°‡∏∑‡∏≠‡∏ô let");
console.log("üéØ const ‡∏ï‡πâ‡∏≠‡∏á‡∏°‡∏µ‡∏Ñ‡πà‡∏≤‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡πÄ‡∏™‡∏°‡∏≠");
console.log("üéØ const ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ reassign ‡πÑ‡∏î‡πâ");
console.log("üéØ const object/array ‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô properties/elements ‡πÑ‡∏î‡πâ");
console.log("üéØ const ‡∏°‡∏µ Temporal Dead Zone ‡πÄ‡∏´‡∏°‡∏∑‡∏≠‡∏ô let");
console.log("üéØ const ‡∏ä‡πà‡∏ß‡∏¢‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏õ‡∏£‡∏∞‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡∏†‡∏≤‡∏û‡πÅ‡∏•‡∏∞‡∏Ñ‡∏ß‡∏≤‡∏°‡∏õ‡∏•‡∏≠‡∏î‡∏†‡∏±‡∏¢");
console.log("üéØ ‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡πÉ‡∏´‡πâ‡πÉ‡∏ä‡πâ const ‡πÄ‡∏õ‡πá‡∏ô‡∏Ñ‡πà‡∏≤‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô, ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÄ‡∏õ‡πá‡∏ô let ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏à‡∏≥‡πÄ‡∏õ‡πá‡∏ô");

export { };
